diff --git a/readthedocs/builds/models.py b/readthedocs/builds/models.py
index d88600190..a19cb3ec4 100644
--- a/readthedocs/builds/models.py
+++ b/readthedocs/builds/models.py
@@ -60,6 +60,7 @@ from readthedocs.builds.utils import (
 from readthedocs.builds.version_slug import VersionSlugField
 from readthedocs.config import LATEST_CONFIGURATION_VERSION
 from readthedocs.core.utils import broadcast
+from readthedocs.core.resolver import resolve_path
 from readthedocs.projects.constants import (
     BITBUCKET_COMMIT_URL,
     BITBUCKET_URL,
@@ -300,6 +301,9 @@ class Version(models.Model):
         )
         return self.identifier
 
+    def get_url(self):
+        return resolve_path(self.project, version_slug=self.slug)
+
     def get_absolute_url(self):
         """Get absolute url to the docs of the version."""
         # Hack external versions for now.
diff --git a/readthedocs/core/management/commands/provision_elasticsearch.py b/readthedocs/core/management/commands/provision_elasticsearch.py
new file mode 100644
index 000000000..785ae5549
--- /dev/null
+++ b/readthedocs/core/management/commands/provision_elasticsearch.py
@@ -0,0 +1,32 @@
+"""Provision Elastic Search"""
+
+from __future__ import absolute_import
+import logging
+
+from django.core.management.base import BaseCommand
+
+from readthedocs.search.indexes import Index, PageIndex, ProjectIndex, SectionIndex
+
+log = logging.getLogger(__name__)
+
+
+class Command(BaseCommand):
+
+    help = __doc__
+
+    def handle(self, *args, **options):
+        """Provision new ES instance"""
+
+        index = Index()
+        index_name = index.timestamped_index()
+
+        log.info("Creating indexes..")
+        index.create_index(index_name)
+        index.update_aliases(index_name)
+        proj = ProjectIndex()
+        proj.put_mapping()
+        page = PageIndex()
+        page.put_mapping()
+        sec = SectionIndex()
+        sec.put_mapping()
+        log.info("Done!")
